version: "3.9"

services:
  # ✅ Kafka broker in KRaft mode
  kafka:
    image: apache/kafka:3.7.0
    container_name: kafka
    ports:
      - "9092:9092"     # for containers
      - "29092:29092"   # for host machine
    environment:
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:29092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      CLUSTER_ID: 7f7b5f9c1e6541c2b3a3c8a23f93e567
    networks:
      - nova-net

  # ✅ User DB
  user-db:
    image: postgres:16
    container_name: user-db
    environment:
      POSTGRES_DB: userdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    networks:
      - nova-net

  # ✅ Product DB
  product-db:
    image: postgres:16
    container_name: product-db
    environment:
      POSTGRES_DB: productdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5434:5432"
    networks:
      - nova-net

  # ✅ Order DB
  order-db:
    image: postgres:16
    container_name: order-db
    environment:
      POSTGRES_DB: orderdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5435:5432"
    networks:
      - nova-net

  # ✅ User Service
  user-service:
    build:
      context: .
      dockerfile: ./user-service/Dockerfile
    container_name: user-service
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: dev
    depends_on:
      - user-db
      - kafka
    networks:
      - nova-net

  # ✅ Product Service
  product-service:
    build:
      context: .
      dockerfile: ./product-service/Dockerfile
    container_name: product-service
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: dev
    depends_on:
      - product-db
      - kafka
    networks:
      - nova-net

  # ✅ Order Service
  order-service:
    build:
      context: .
      dockerfile: ./order-service/Dockerfile
    container_name: order-service
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: dev
    depends_on:
      - order-db
      - kafka
    networks:
      - nova-net

networks:
  nova-net:
    driver: bridge